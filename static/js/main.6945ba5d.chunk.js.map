{"version":3,"sources":["assets/redux/userState/userActionTypes.js","assets/redux/userState/userReducer.js","assets/redux/store.js","assets/config/urlList.js","assets/config/localStorage.js","assets/pages/login/login.js","assets/redux/userState/userAction.js","assets/pages/notfoundpage/notfoundpage.js","assets/pages/sidebar/sidebar.js","assets/pages/dashboard/dashboard.js","assets/pages/docViewer/docViewer.js","assets/pages/notice/noticeform/noticeform.js","assets/pages/notice/noticeComments/noticeComments.js","assets/pages/notice/notice.js","assets/pages/assignment/teacherpage/assignmentForm/assignmentForm.js","assets/pages/assignment/teacherpage/teacherpage.js","assets/pages/assignment/studentpage/studentpage.js","assets/pages/assignment/assignmnet.js","assets/pages/assignment/teacherpage/studentsAssignmentPage/studentsAssignmentPage.js","assets/pages/timeTable/timeTableForm/timeTableForm.js","assets/pages/timeTable/timeTable.js","App.js","index.js"],"names":["CHANGE_USER_STAFF","CHANGE_USER_ID","CHANGE_USER_PROFILE","CHANGE_USER_TOKEN","CHANGE_USER_USERNAME","CHANGE_USER_PASSWORD","initialState","userId","username","password","token","profile","isStaff","userReducer","state","action","type","payload","rootReducer","combineReducers","store","createStore","home","login","getUserProfile","postNotice","postAssignement","getNoticeList","getAssignmentList","profilePic","getAssignmentSubmissions","submitAssignement","postSchedule","getSchedule","getNoticeComments","postNoticeComments","getToken","localStorage","getItem","clearToken","clear","props","signIn","event","myHeaders","Headers","append","raw","JSON","stringify","fetch","urlList","method","headers","body","redirect","then","response","console","log","status","ok","Error","json","access","setItem","changeUsername","changeUserPassword","changeUserToken","history","push","catch","error","preventDefault","className","onSubmit","placeholder","value","this","onChange","setState","target","href","Component","connect","dispatch","notfoundpage","sidebar","fetchAndUpdateData","result","changeUserProfile","changeUserId","name","id","changeUserStaffStatus","is_staff","checkTokenStored","logOut","to","size","Profile_pic","alt","width","height","src","first_name","last_name","email","designation","Roll_number","branch","semester","activeClassName","onClick","dashboard","classSchedule","arr","subject","teacher","time","canJoin","i","fetchAssignmentList","assignmentList","fetchNoticeData","noticeList","map","val","ind","Button","title","date","scope","image_content","desig","department","DocxViewer","numberOfPages","currentPage","e","fileType","filePath","uri","onError","color","PdfViewer","onPdfLoadSucces","page","numPages","pdfjs","GlobalWorkerOptions","workerSrc","version","file","onLoadSuccess","onLoadError","pageNumber","Array","apply","DocumentViewer","noticeform","submitForm","formdata","FormData","content","selectAttachment","selectDocument","text","todaysDate","curr","Date","setDate","getDate","toISOString","substr","htmlFor","required","rows","accept","files","disabled","defaultValue","noticeComments","fetchComments","noticeId","requestOptions","commentsData","postComment","mycomment","active","post","getCurrenteDate","currentdate","getMonth","getFullYear","getHours","getMinutes","getSeconds","created_on","notice","noticedata","postedby","showpdfmodal","shownoticeformmodal","pdfLink","template_docx","Modal","show","dialogClassName","onHide","assignmentForm","teacherpage","showPdfModal","showAssignmentformmodal","Math","floor","random","studentpage","submitAssignment","assignmentFileToUpload","length","assignmentID","showSubmitModal","Body","for","useHistory","StudentsAssignmentclass","submission_date","marks","upload_file","StudentAssignmentPage","useParams","timeTableForm","addColumn","timings","temptiming","from","tempmonday","monday","tempTuesday","tuesday","tempWednesday","wednesday","tempThursday","thursday","tempFriday","friday","tempSaturday","saturday","changeSubjectValue","day","temp","changeFromTiming","changeToTiming","uploadDaywiselecture","selectedday","lectures","lecture_one","lecture_two","lecture_three","lecture_four","lecture_five","lecture_six","scheduleformSubmit","OverlayTrigger","placement","delay","hide","overlay","Tooltip","timeTable","fetchSchedule","sem","tempTiming","tempMonday","tempDay","showModal","AllRoutes","exact","path","NavBar","match","useRouteMatch","App","Store","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6945ba5d.chunk.js","sourcesContent":["export const CHANGE_USER_STAFF='CHANGE_USER_STAFF';\r\nexport const CHANGE_USER_ID=' CHANGE_USER_ID';\r\nexport const CHANGE_USER_PROFILE='CHANGE_USER_PROFILE';\r\nexport const CHANGE_USER_TOKEN='CHANGE_USER_TOKEN';\r\nexport const CHANGE_USER_USERNAME='CHANGE_USER_USERNAME';\r\nexport const CHANGE_USER_PASSWORD='CHANGE_USER_PASSWORD';","import {\r\n  CHANGE_USER_ID,\r\n  CHANGE_USER_PASSWORD,\r\n  CHANGE_USER_PROFILE,\r\n  CHANGE_USER_STAFF,\r\n  CHANGE_USER_TOKEN,\r\n  CHANGE_USER_USERNAME,\r\n} from \"./userActionTypes\";\r\n\r\nconst initialState = {\r\n  userId: null,\r\n  username: null,\r\n  password: null,\r\n  token: null,\r\n  profile: null,\r\n  isStaff: false,\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_USER_ID:\r\n      return {\r\n        ...state,\r\n        userId: action.payload,\r\n      };\r\n    case CHANGE_USER_USERNAME:\r\n      return {\r\n        ...state,\r\n        username: action.payload,\r\n      };\r\n    case CHANGE_USER_PASSWORD:\r\n      return {\r\n        ...state,\r\n        password: action.payload,\r\n      };\r\n    case CHANGE_USER_TOKEN:\r\n      return {\r\n        ...state,\r\n        token: action.payload,\r\n      };\r\n    case CHANGE_USER_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.payload,\r\n      };\r\n    case CHANGE_USER_STAFF:\r\n      return {\r\n        ...state,\r\n        isStaff: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport userReducer from \"./userState/userReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  userReducer: userReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","let home = \"http://127.0.0.1:8000/\";\r\nexport default {\r\n  login: home + \"api/v1/token/\",\r\n  getUserProfile: home + \"api/v1/userprofile/users/get_profile/\",\r\n  postNotice: home + \"api/v1/notice/notice_post/\",\r\n  postAssignement: home + \"api/v1/notice/assignment_post/\",\r\n  getNoticeList: home + \"api/v1/notice/notice_post/\",\r\n  getAssignmentList: home + \"api/v1/notice/assignment_post/\",\r\n  profilePic: \"http://127.0.0.1:8000\",\r\n  getAssignmentSubmissions: home + \"api/v1/clsses/Assignment/?assigned_by=\",\r\n  submitAssignement: home + \"api/v1/clsses/Assignment/\",\r\n  postSchedule: home + \"api/v1/clsses/Schedule/\",\r\n  getSchedule: home + \"api/v1/clsses/Schedule/?semester=\",\r\n  getNoticeComments: home + \"api/v1/notice/comments/?post=\",\r\n  postNoticeComments: home + \"api/v1/notice/comments/\",\r\n};\r\n","export const saveToken = (token) => {\r\n  localStorage.setItem(\"Token\", token);\r\n};\r\n\r\nexport const getToken = () => {\r\n  return localStorage.getItem(\"Token\");\r\n};\r\n\r\nexport const clearToken = () => {\r\n  localStorage.clear();\r\n};\r\n","import React, { Component } from \"react\";\r\nimport urlList from \"../../config/urlList\";\r\nimport {\r\n  changeUsername,\r\n  changeUserPassword,\r\n  changeUserToken,\r\n} from \"../../redux/index\";\r\nimport { saveToken } from \"../../config/localStorage\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./login.css\";\r\nclass login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n  signIn = (event) => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    var raw = JSON.stringify({\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    });\r\n\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(urlList.login, requestOptions)\r\n      .then((response) => {\r\n        console.log(response.status);\r\n        if (!response.ok) {\r\n          throw new Error(\"HTTP status \" + response.status);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((response) => {\r\n        console.log(\"ok \", response.access);\r\n        saveToken(response.access);\r\n        this.props.changeUsername(this.state.username);\r\n        this.props.changeUserPassword(this.state.password);\r\n        this.props.changeUserToken(response.access);\r\n        console.log(this.props.history);\r\n      })\r\n      .then(() => this.props.history.push(\"/home/dashboard/\"))\r\n      .catch((error) => console.log(\"login error\", error));\r\n\r\n    event.preventDefault(); //used to prevent browser from reloading on form submit\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"login-page\">\r\n          <div className=\"form\">\r\n            {/* <form className=\"register-form\">\r\n              <input type=\"text\" placeholder=\"name\" />\r\n              <input type=\"password\" placeholder=\"password\" />\r\n              <input type=\"text\" placeholder=\"email address\" />\r\n              <button>create</button>\r\n              <p className=\"message\">\r\n                Already registered? <a href=\"#\">Sign In</a>\r\n              </p>\r\n            </form> */}\r\n            <form\r\n              className=\"login-form\"\r\n              onSubmit={(event) => this.signIn(event)}\r\n            >\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Username\"\r\n                value={this.state.username}\r\n                onChange={(event) =>\r\n                  this.setState({ username: event.target.value })\r\n                }\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={this.state.password}\r\n                onChange={(event) =>\r\n                  this.setState({ password: event.target.value })\r\n                }\r\n              />\r\n              <button type=\"submit\">login</button>\r\n            </form>\r\n            <p className=\"message\">\r\n              Not registered? <a href=\"#\">Create an account</a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     farmerId: state.farmerReducer.farmerId,\r\n//     profile: state.farmerReducer.profile,\r\n//   };\r\n// };\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changeUsername: (payload) => {\r\n      dispatch(changeUsername(payload));\r\n    },\r\n    changeUserPassword: (payload) => {\r\n      dispatch(changeUserPassword(payload));\r\n    },\r\n    changeUserToken: (payload) => {\r\n      dispatch(changeUserToken(payload));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(login);\r\n","import {\r\n  CHANGE_USER_ID,\r\n  CHANGE_USER_PROFILE,\r\n  CHANGE_USER_STAFF,\r\n  CHANGE_USER_TOKEN,\r\n  CHANGE_USER_PASSWORD,\r\n  CHANGE_USER_USERNAME,\r\n} from \"./userActionTypes\";\r\n\r\nexport const changeUserId = (parameter) => {\r\n  return {\r\n    type: CHANGE_USER_ID,\r\n    payload: parameter,\r\n  };\r\n};\r\nexport const changeUserProfile = (parameter) => {\r\n  return {\r\n    type: CHANGE_USER_PROFILE,\r\n    payload: parameter,\r\n  };\r\n};\r\nexport const changeUserStaffStatus = (parameter) => {\r\n  return {\r\n    type: CHANGE_USER_STAFF,\r\n    payload: parameter,\r\n  };\r\n};\r\nexport const changeUserToken = (parameter) => {\r\n  return {\r\n    type: CHANGE_USER_TOKEN,\r\n    payload: parameter,\r\n  };\r\n};\r\nexport const changeUsername = (parameter) => {\r\n  return {\r\n    type: CHANGE_USER_USERNAME,\r\n    payload: parameter,\r\n  };\r\n};\r\nexport const changeUserPassword = (parameter) => {\r\n  return {\r\n    type: CHANGE_USER_PASSWORD,\r\n    payload: parameter,\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"./notfoundpage.css\";\r\nclass notfoundpage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"nfp-container\">\r\n        <div className='message'>\r\n          <div className=\"errorcode\">404 </div>\r\n          <div className=\"errormessage\">Page not found !</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default notfoundpage;\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  changeUserId,\r\n  changeUserProfile,\r\n  changeUserStaffStatus,\r\n} from \"../../redux/index\";\r\nimport { clearToken, getToken } from \"../../config/localStorage\";\r\nimport { AiFillFile } from \"react-icons/ai\";\r\nimport { BsTable } from \"react-icons/bs\";\r\nimport {\r\n  MdOutlineSpaceDashboard,\r\n  MdWysiwyg,\r\n  MdAccountCircle,\r\n} from \"react-icons/md\";\r\nimport \"./sidebar.css\";\r\nimport urlList from \"../../config/urlList\";\r\nclass sidebar extends Component {\r\n  fetchAndUpdateData = () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", \"Bearer \" + getToken());\r\n\r\n    var requestOptions = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(urlList.getUserProfile, requestOptions)\r\n      .then((response) => {\r\n        console.log(response.status);\r\n        if (!response.ok) {\r\n          throw new Error(\"HTTP status \" + response.status);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((result) => {\r\n        console.log(\"profile fetch ok \", result);\r\n        this.props.changeUserProfile(result);\r\n        this.props.changeUserId(result.name.id);\r\n        this.props.changeUserStaffStatus(result.name.is_staff);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n  checkTokenStored = () => {\r\n    if (getToken() !== null) {\r\n      this.fetchAndUpdateData();\r\n    } else {\r\n      this.logOut();\r\n    }\r\n  };\r\n\r\n  logOut = () => {\r\n    clearToken();\r\n    this.props.history.push(\"/login/\");\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.checkTokenStored();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"sidebar-container\">\r\n        <nav className=\"nav-menu\">\r\n          <ul className=\"nav-menu-items\">\r\n            <li className=\"nav-profile\">\r\n              <NavLink to=\"#\">\r\n                {this.props.profile === null ? (\r\n                  <MdAccountCircle size=\"130px\" />\r\n                ) : this.props.profile.Profile_pic !== null ? (\r\n                  <img\r\n                    className=\"rounded-circle profile\"\r\n                    alt=\"50x50\"\r\n                    width=\"140px\"\r\n                    height=\"140px\"\r\n                    src={\r\n                      // \"https://mdbootstrap.com/img/Photos/Avatars/img%20(30).jpg\"\r\n                      urlList.profilePic + this.props.profile.Profile_pic\r\n                    }\r\n                    data-holder-rendered=\"true\"\r\n                  />\r\n                ) : (\r\n                  <MdAccountCircle size=\"140px\" />\r\n                )}\r\n                {this.props.profile !== null ? (\r\n                  this.props.isStaff ? (\r\n                    <>\r\n                      <span className=\"bottomProfileText\">\r\n                        {this.props.profile.name.first_name +\r\n                          \" \" +\r\n                          this.props.profile.name.last_name}\r\n                      </span>\r\n                      <span >{this.props.profile.name.email}</span>\r\n                      <span>{this.props.profile.designation}</span>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <span>\r\n                        {this.props.profile.name.first_name +\r\n                          \" \" +\r\n                          this.props.profile.name.last_name}\r\n                      </span>\r\n                      <span>{this.props.profile.name.email}</span>\r\n                      <span className=\"bottomProfileText\">{this.props.profile.Roll_number}</span>\r\n                      <span className=\"bottomProfileText\">\r\n                        {this.props.profile.branch +\r\n                          \" \" +\r\n                          this.props.profile.semester}\r\n                      </span>\r\n                    </>\r\n                  )\r\n                ) : (\r\n                  <>\r\n                    <span>USERNAME</span>\r\n                    <span>OTHERINFO</span>\r\n                  </>\r\n                )}\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-text\">\r\n              <NavLink to=\"/home/dashboard\" activeClassName=\"nav-text-active\">\r\n                <MdOutlineSpaceDashboard className=\"sidbar-icon\" size=\"30px\" />\r\n                <span className=\"sidbar-text\">DashBoard</span>\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-text\">\r\n              <NavLink to=\"/home/notice\" activeClassName=\"nav-text-active\">\r\n                <MdWysiwyg className=\"sidbar-icon\" size=\"30px\" />\r\n                <span className=\"sidbar-text\"> Notices</span>\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-text\">\r\n              <NavLink to=\"/home/assignment\" activeClassName=\"nav-text-active\">\r\n                <AiFillFile className=\"sidbar-icon\" size=\"30px\" />\r\n                <span className=\"sidbar-text\">Assignments</span>\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-text\">\r\n              <NavLink to=\"/home/timetable\" activeClassName=\"nav-text-active\">\r\n                <BsTable className=\"sidbar-icon\" size=\"25px\" />\r\n                <span className=\"sidbar-text\">Time Table</span>\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn logout\"\r\n            onClick={() => this.logOut()}\r\n          >\r\n            LOGOUT\r\n          </button>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.userReducer.profile,\r\n    isStaff: state.userReducer.isStaff,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changeUserId: (payload) => {\r\n      dispatch(changeUserId(payload));\r\n    },\r\n    changeUserProfile: (payload) => {\r\n      dispatch(changeUserProfile(payload));\r\n    },\r\n    changeUserStaffStatus: (payload) => {\r\n      dispatch(changeUserStaffStatus(payload));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(sidebar);\r\n","import Button from \"@restart/ui/esm/Button\";\r\nimport React, { Component } from \"react\";\r\nimport urlList from \"../../config/urlList\";\r\nimport { getToken } from \"../../config/localStorage\";\r\nimport \"./dashboard.css\";\r\n\r\nclass dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      noticeList: null,\r\n      assignmentList: null,\r\n    };\r\n  }\r\n  classSchedule = () => {\r\n    let arr = [];\r\n    arr.push({\r\n      subject: \"Mobile Computing\",\r\n      teacher: \"Monika Sahu\",\r\n      time: \"9:30 AM\",\r\n      canJoin: true,\r\n    });\r\n    for (let i = 0; i < 15; i++) {\r\n      arr.push({\r\n        subject: \"Mobile Computing\",\r\n        teacher: \"Monika Sahu\",\r\n        time: \"9:30 AM\",\r\n        canJoin: false,\r\n      });\r\n    }\r\n    return arr;\r\n  };\r\n  fetchAssignmentList = () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", \"Bearer \" + getToken());\r\n\r\n    var requestOptions = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(urlList.getAssignmentList, requestOptions)\r\n      .then((response) => {\r\n        console.log(response.status);\r\n        if (!response.ok) {\r\n          throw new Error(\"HTTP status \" + response.status);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((result) => {\r\n        console.log(\"assignment data\", result);\r\n        this.setState({ assignmentList: result });\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n  fetchNoticeData = () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", \"Bearer \" + getToken());\r\n\r\n    var requestOptions = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(urlList.getNoticeList, requestOptions)\r\n      .then((response) => {\r\n        console.log(response.status);\r\n        if (!response.ok) {\r\n          throw new Error(\"HTTP status \" + response.status);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((result) => {\r\n        console.log(\"notice data \", result);\r\n        this.setState({ noticeList: result });\r\n      })\r\n      .catch((error) => console.log(\"notice list fetch error\", error));\r\n  };\r\n  componentDidMount() {\r\n    this.fetchNoticeData();\r\n    this.fetchAssignmentList();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"dashcontainer\">\r\n        <div className=\"container\">\r\n          <div className=\"row rowtable\">\r\n            <div className=\"column1\">\r\n              <table>\r\n                <thead className=\"\">\r\n                  <tr className=\"tableHead  \"> Class Schedule</tr>\r\n\r\n                  <tr className=\"divider\">\r\n                    <th>Subject</th>\r\n                    <th>Teacher</th>\r\n                    <th>Time</th>\r\n                    <th>Join</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.classSchedule().map((val, ind) => (\r\n                    <tr key={ind}>\r\n                      <td>\r\n                        <a href=\"#\">{val.subject}</a>\r\n                      </td>\r\n                      <td>{val.teacher}</td>\r\n                      <td>{val.time}</td>\r\n                      <td>\r\n                        <Button\r\n                          className={\r\n                            val.canJoin\r\n                              ? \"status status-paid disable\"\r\n                              : \"status status-unpaid\"\r\n                          }\r\n                        >\r\n                          Join\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div className=\"column1\">\r\n              <table>\r\n                <thead>\r\n                  <tr className=\"tableHead\"> Assignment</tr>\r\n                  <tr className=\"divider\">\r\n                    <th>Title</th>\r\n                    <th className=\"tableValue\">\r\n                      <span>Subject</span>\r\n                    </th>\r\n                    <th className=\"tableValue\">\r\n                      <span>Teacher</span>\r\n                    </th>\r\n                    <th className=\"tableValue\">\r\n                      <span>Issue Date</span>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.assignmentList !== null ? (\r\n                    this.state.assignmentList.map((val, ind) => (\r\n                      <tr key={ind}>\r\n                        <td>\r\n                          <a\r\n                            href=\"#\"\r\n                            onClick={() =>\r\n                              this.props.history.push(\"/home/assignment/\")\r\n                            }\r\n                          >\r\n                            {val.title}\r\n                          </a>\r\n                        </td>\r\n                        <td className=\"tableValue\">\r\n                          <span>{val.subject[0]}</span>\r\n                        </td>\r\n                        <td className=\"tableValue\">\r\n                          <span>{val.name}</span>\r\n                        </td>\r\n                        <td className=\"tableValue\">\r\n                          <span>{val.date}</span>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header noticeHead \">\r\n                <h4>Notice</h4>\r\n              </div>\r\n              <div className=\"table-responsive\">\r\n                <table className=\"table table-hover table-nowrap\">\r\n                  <thead className=\"thead-light\">\r\n                    <tr className=\"divider\">\r\n                      <th scope=\"col\" className=\"subject\">\r\n                        Subject\r\n                      </th>\r\n                      \r\n                      <th scope=\"col\" className=\"tableValue\">\r\n                        <span>Author</span>\r\n                      </th>\r\n                      <th scope=\"col\" className=\"tableValue\">\r\n                        <span>Designation</span>\r\n                      </th>\r\n                      <th scope=\"col\" className=\"tableValue\">\r\n                        <span>Department</span>\r\n                      </th>\r\n                      <th scope=\"col\" className=\"tableValue\">\r\n                        <span>Date</span>\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {this.state.noticeList !== null ? (\r\n                      this.state.noticeList.map((val, ind) => (\r\n                        <tr key={ind}>\r\n                          <td data-label=\"Job Title\" className=\"subject\">\r\n                            <a\r\n                              className=\"text-heading font-semibold\"\r\n                              href=\"#\"\r\n                              onClick={() =>\r\n                                this.props.history.push(\"/home/notice/\")\r\n                              }\r\n                            >\r\n                              {\r\n                                val.subject /*+\r\n                        \" gusgdsauchs uhhhhhhhhhhhhh hhhhhhhhhhhhhhhhh hhhhhhhhhhhh hhh hhhhhhhhhhhhh hhhhhhhhhhhh hhh hhhhhhhhh hhhhhhh hhhhhhhhhhhhh hhhhhhh hhhhhhhhhhhhhh hhhhhhhhhhhh hhhhhhhhhhhh hhhh  hhhhhh hhhh hhhhhhhhhhhh hhhhhhhhhhhhh hhhhhhhhhhhhh hhhhh\"*/\r\n                              }\r\n                            </a>\r\n                            <br />\r\n                            {val.image_content !== null ? (\r\n                              <div>\r\n                                <a\r\n                                  className=\"text-heading font-semibold attachments\"\r\n                                  href={val.image_content}\r\n                                  target=\"_blank\"\r\n                                >\r\n                                  Attachments\r\n                                </a>\r\n                              </div>\r\n                            ) : (\r\n                              <></>\r\n                            )}\r\n                          </td>\r\n                          <td data-label=\"Email\" className=\"tableValue\">\r\n                            <span>{val.name}</span>\r\n                          </td>\r\n                          <td data-label=\"Email\" className=\"tableValue\">\r\n                            <span>{val.desig}</span>\r\n                          </td>\r\n                          <td data-label=\"Email\" className=\"tableValue\">\r\n                            <span>{val.department}</span>\r\n                          </td>\r\n                          <td data-label=\"Email\" className=\"tableValue\">\r\n                            <span>{val.date}</span>\r\n                          </td>\r\n                        </tr>\r\n                      ))\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default dashboard;\r\n","import React, { Component } from \"react\";\r\nimport { MdDownload } from \"react-icons/md\";\r\nimport FileViewer from \"react-file-viewer\";\r\nimport { Document, Page, pdfjs } from \"react-pdf\";\r\nimport \"./docViewer.css\";\r\n\r\nclass DocxViewer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      numberOfPages: 5,\r\n      currentPage: 1,\r\n    };\r\n  }\r\n  onError(e) {\r\n    console.log(e, \"error in file-viewer\");\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"docxview\">\r\n        <div>\r\n          <FileViewer\r\n            fileType={\"docx\"}\r\n            filePath={this.props.uri}\r\n            onError={this.onError}\r\n          />\r\n        </div>\r\n        <a className=\"downloadbtn\" href={this.props.uri}>\r\n          <MdDownload size=\"25px\" color=\"#0d6efd\" />\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass PdfViewer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      numberOfPages: 0,\r\n      currentPage: 1,\r\n    };\r\n  }\r\n  onPdfLoadSucces = (page) => {\r\n    this.setState({ currentPage: 1, numberOfPages: page.numPages });\r\n  };\r\n  componentDidMount() {\r\n    pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"pdfview\">\r\n        <div>\r\n          <Document\r\n            file={this.props.uri}\r\n            onLoadSuccess={this.onPdfLoadSucces}\r\n            onLoadError={(e) => console.log(e)}\r\n          >\r\n            <Page height={645} pageNumber={this.state.currentPage} />\r\n          </Document>\r\n          <div className=\"navpaging\">\r\n            <nav aria-label=\"...\">\r\n              <ul className=\"pagination\">\r\n                {Array.apply(0, Array(this.state.numberOfPages)).map(\r\n                  (val, ind) => (\r\n                    <li\r\n                      className={\r\n                        this.state.currentPage === ind + 1\r\n                          ? \"page-item active\"\r\n                          : \"page-item\"\r\n                      }\r\n                      aria-current=\"page\"\r\n                      key={ind}\r\n                    >\r\n                      <a\r\n                        className=\"page-link\"\r\n                        href=\"#\"\r\n                        onClick={() => this.setState({ currentPage: ind + 1 })}\r\n                      >\r\n                        {ind + 1}\r\n                      </a>\r\n                    </li>\r\n                  )\r\n                )}\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n        <a className=\"downloadbtn\" href={this.props.uri}>\r\n          <MdDownload size=\"25px\" color=\"#0d6efd\" />\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass DocumentViewer extends Component {\r\n  render() {\r\n    return this.props.fileType === \"pdf\" ? (\r\n      <PdfViewer uri={this.props.uri} />\r\n    ) : (\r\n      <DocxViewer uri={this.props.uri} />\r\n    );\r\n  }\r\n}\r\n\r\nexport const GoogleDocView = (props) => {\r\n  return (\r\n    <div className=\"pdfview\">\r\n      <iframe\r\n        src={\r\n          \"https://docs.google.com/viewer?url=\" + props.uri + \"&embedded=true\"\r\n        }\r\n        title=\"file\"\r\n        width=\"100%\"\r\n        height=\"600\"\r\n      ></iframe>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DocumentViewer;\r\n","import React, { Component } from \"react\";\r\nimport \"./noticeform.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { getToken } from \"../../../config/localStorage\";\r\nimport urlList from \"../../../config/urlList\";\r\nclass noticeform extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      subject: \"\",\r\n      content: \"\",\r\n      selectAttachment: [],\r\n      selectDocument: [],\r\n    };\r\n  }\r\n  submitForm = () => {\r\n    let myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", \"Bearer \" + getToken());\r\n\r\n    let formdata = new FormData();\r\n    formdata.append(\"department\", \"CSE\");\r\n    formdata.append(\"desig\", this.props.profile.designation);\r\n    formdata.append(\"subject\", this.state.subject);\r\n    formdata.append(\"content\", this.state.content);\r\n    formdata.append(\"image_content\", this.state.selectAttachment);\r\n    formdata.append(\"template_docx\", this.state.selectDocument);\r\n    formdata.append(\"author\", this.props.userId);\r\n    formdata.append(\r\n      \"name\",\r\n      this.props.profile.name.first_name +\r\n        \" \" +\r\n        this.props.profile.name.last_name\r\n    );\r\n\r\n    let requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: formdata,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(urlList.postNotice, requestOptions)\r\n      .then((response) => {\r\n        console.log(response.status);\r\n        if (!response.ok) {\r\n          throw new Error(\"HTTP status \" + response.status);\r\n        }\r\n        return response.text();\r\n      })\r\n      .then((result) => {\r\n        console.log(result, this.props);\r\n        this.props.fetchNoticeData();\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n\r\n  todaysDate = () => {\r\n    let curr = new Date();\r\n    curr.setDate(curr.getDate());\r\n    let date = curr.toISOString().substr(0, 10);\r\n    return date;\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"noticeformcontainer\">\r\n        <form>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"title\">Subject:</label>\r\n            <input\r\n              id=\"title\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Notice Subject\"\r\n              required\r\n              value={this.state.subject}\r\n              onChange={(event) =>\r\n                this.setState({ subject: event.target.value })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"content\">Content:</label>\r\n            <textarea\r\n              className=\"form-control\"\r\n              id=\"content\"\r\n              rows=\"3\"\r\n              required\r\n              value={this.state.content}\r\n              onChange={(event) =>\r\n                this.setState({ content: event.target.value })\r\n              }\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"attachment\">Select Image Attachment:</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"file\"\r\n              id=\"attachment\"\r\n              accept=\"image/*\"\r\n              onChange={(event) =>\r\n                this.setState({ selectAttachment: event.target.files[0] })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"attachment\">Select Notice Attachment:</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"file\"\r\n              id=\"attachment\"\r\n              accept=\".docx\"\r\n              onChange={(event) =>\r\n                this.setState({ selectDocument: event.target.files[0] })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"date\">Date:</label>\r\n            <input\r\n              id=\"date\"\r\n              className=\"form-control\"\r\n              type=\"date\"\r\n              name=\"pickup_time\"\r\n              required\r\n              disabled\r\n              defaultValue={this.todaysDate()}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"assignedby\">Author:</label>\r\n            <input\r\n              id=\"assignedby\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              disabled\r\n              value={\r\n                this.props.profile.name.first_name +\r\n                \" \" +\r\n                this.props.profile.name.last_name\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"department\">Department By:</label>\r\n            <input\r\n              id=\"department\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Department\"\r\n              value={\"CSE\"}\r\n              disabled\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"designation\">Designation:</label>\r\n            <input\r\n              id=\"designation\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Designation\"\r\n              value={this.props.profile.designation}\r\n              disabled\r\n              required\r\n            />\r\n          </div>\r\n        </form>\r\n        <button\r\n          value=\"Submit\"\r\n          className=\"submit\"\r\n          onClick={() => this.submitForm()}\r\n        >\r\n          Submit\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.userReducer.profile,\r\n    isStaff: state.userReducer.isStaff,\r\n    userId: state.userReducer.userId,\r\n  };\r\n};\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     changeUserId: (payload) => {\r\n//       dispatch(changeUserId(payload));\r\n//     },\r\n//     changeUserProfile: (payload) => {\r\n//       dispatch(changeUserProfile(payload));\r\n//     },\r\n//     changeUserStaffStatus: (payload) => {\r\n//       dispatch(changeUserStaffStatus(payload));\r\n//     },\r\n//   };\r\n// };\r\n\r\nexport default connect(mapStateToProps, null)(noticeform);\r\n","import React, { Component } from \"react\";\r\nimport { getToken } from \"../../../config/localStorage\";\r\nimport urlList from \"../../../config/urlList\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./noticeComments.css\";\r\nclass noticeComments extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      commentsData: [],\r\n      mycomment: \"\",\r\n    };\r\n  }\r\n  fetchComments = () => {\r\n    console.log(\"id \", this.props.noticeId);\r\n    if (this.props.noticeId !== null) {\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Authorization\", \"Bearer \" + getToken());\r\n\r\n      var requestOptions = {\r\n        method: \"GET\",\r\n        headers: myHeaders,\r\n        redirect: \"follow\",\r\n      };\r\n\r\n      fetch(urlList.getNoticeComments + this.props.noticeId, requestOptions)\r\n        .then((response) => {\r\n          console.log(response.status);\r\n          if (!response.ok) {\r\n            throw new Error(\"HTTP status \" + response.status);\r\n          }\r\n          return response.json();\r\n        })\r\n        .then((result) => {\r\n          console.log(result);\r\n          this.setState({ commentsData: result });\r\n        })\r\n        .catch((error) => console.log(\"error in fetch comments\", error));\r\n    }\r\n  };\r\n\r\n  postComment = () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", \"Bearer \" + getToken());\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    var raw = JSON.stringify({\r\n      name:\r\n        this.props.profile.name.first_name +\r\n        \" \" +\r\n        this.props.profile.name.last_name,\r\n      body: this.state.mycomment,\r\n      active: false,\r\n      post: this.props.noticeId,\r\n    });\r\n\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(urlList.postNoticeComments, requestOptions)\r\n      .then((response) => {\r\n        console.log(response.status);\r\n        if (!response.ok) {\r\n          throw new Error(\"HTTP status \" + response.status);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((result) => {\r\n        console.log(result, \"comment post success \");\r\n        this.fetchComments();\r\n      })\r\n      .catch((error) => console.log(\"error in posting comment \", error));\r\n  };\r\n\r\n  getCurrenteDate = () => {\r\n    let currentdate = new Date();\r\n    let datetime =\r\n      currentdate.getDate() +\r\n      \"/\" +\r\n      (currentdate.getMonth() + 1) +\r\n      \"/\" +\r\n      currentdate.getFullYear() +\r\n      \" @ \" +\r\n      currentdate.getHours() +\r\n      \":\" +\r\n      currentdate.getMinutes() +\r\n      \":\" +\r\n      currentdate.getSeconds();\r\n    return datetime;\r\n  };\r\n  componentDidMount() {\r\n    this.fetchComments();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ul className=\"list-group\">\r\n          <div className=\"allcommentslist\">\r\n            {this.state.commentsData.map((val, ind) => (\r\n              <li className=\"list-group-item\" key={ind}>\r\n                <div className=\"mb-3\">\r\n                  <div className=\"commentinfo\">\r\n                    <label\r\n                      htmlFor=\"exampleFormControlTextarea1\"\r\n                      className=\"form-label\"\r\n                    >\r\n                      {val.name}\r\n                    </label>\r\n                    <small className=\"text-muted\">{val.created_on}</small>\r\n                  </div>\r\n                  <div className=\"commentbody\">\r\n                    <p>{val.body}</p>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </div>\r\n          <li className=\"list-group-item writesection\">\r\n            <div className=\"mb-3\">\r\n              <div className=\"commentinfo\">\r\n                <label\r\n                  htmlFor=\"exampleFormControlTextarea1\"\r\n                  className=\"form-label\"\r\n                >\r\n                  {this.props.profile.name.first_name +\r\n                    \" \" +\r\n                    this.props.profile.name.last_name}\r\n                </label>\r\n                <small className=\"text-muted\">{this.getCurrenteDate()}</small>\r\n              </div>\r\n              <div className=\"input-group mb-3\">\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  value={this.state.mycomment}\r\n                  onChange={(event) =>\r\n                    this.setState({ mycomment: event.target.value })\r\n                  }\r\n                />\r\n                <button\r\n                  className=\"btn btn-outline-secondary\"\r\n                  type=\"button\"\r\n                  id=\"button-addon2\"\r\n                  onClick={() => this.postComment()}\r\n                >\r\n                  Send\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.userReducer.profile,\r\n    isStaff: state.userReducer.isStaff,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(noticeComments);\r\n","import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport DocViewer from \"../docViewer/docViewer\";\r\nimport { getToken } from \"../../config/localStorage\";\r\nimport { connect } from \"react-redux\";\r\nimport urlList from \"../../config/urlList\";\r\nimport NoticeForm from \"./noticeform/noticeform\";\r\nimport NoticeComments from \"./noticeComments/noticeComments\";\r\nimport \"./notice.css\";\r\nclass notice extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showpdfmodal: false,\r\n      shownoticeformmodal: false,\r\n      noticeList: null,\r\n      pdfLink: null,\r\n      noticeId: null,\r\n    };\r\n  }\r\n  noticedata = () => {\r\n    let arr = [];\r\n    arr.push({\r\n      subject: \"Admission Form\",\r\n      postedby: \"Student Section\",\r\n      date: \"29 Feb 2021\",\r\n    });\r\n    for (let i = 0; i < 10; i++) {\r\n      arr.push({\r\n        subject: \"Holiday\",\r\n        postedby: \"Admistration\",\r\n        date: \"29 Feb 2021\",\r\n      });\r\n    }\r\n    return arr;\r\n  };\r\n  fetchNoticeData = () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", \"Bearer \" + getToken());\r\n\r\n    var requestOptions = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(urlList.getNoticeList, requestOptions)\r\n      .then((response) => {\r\n        console.log(response.status);\r\n        if (!response.ok) {\r\n          throw new Error(\"HTTP status \" + response.status);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((result) => {\r\n        console.log(result);\r\n        this.setState({ noticeList: result });\r\n      })\r\n      .catch((error) => console.log(\"notice list fetch error\", error));\r\n  };\r\n  componentDidMount() {\r\n    this.fetchNoticeData();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"noticecontainer\">\r\n        {this.props.isStaff ? (\r\n          <Button\r\n            className=\"btn-sm createnotice\"\r\n            onClick={() => this.setState({ shownoticeformmodal: true })}\r\n          >\r\n            Create Notice\r\n          </Button>\r\n        ) : (\r\n          <div />\r\n        )}\r\n        <div\r\n          className={\r\n            this.props.isStaff\r\n              ? \"noticetableparentwithbutton\"\r\n              : \"noticetableparent\"\r\n          }\r\n        >\r\n          <table className=\"table table-hover table-nowrap\">\r\n            <thead className=\"thead-light\">\r\n              <tr>\r\n                <th scope=\"col\" className=\"subject\">\r\n                  Subject\r\n                </th>\r\n                <th scope=\"col\" className=\"tableValue\">\r\n                  <span>Author</span>\r\n                </th>\r\n                <th scope=\"col\" className=\"tableValue\">\r\n                  <span>Designation</span>\r\n                </th>\r\n                <th scope=\"col\" className=\"tableValue\">\r\n                  <span>Department</span>\r\n                </th>\r\n                <th scope=\"col\" className=\"tableValue\">\r\n                  <span>Date</span>\r\n                </th>\r\n                <th scope=\"col\" className=\"tableValue\">\r\n                  <span>View</span>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.noticeList !== null ? (\r\n                this.state.noticeList.map((val, ind) => (\r\n                  <tr key={ind}>\r\n                    <td data-label=\"Job Title\" className=\"subject\">\r\n                      <a className=\"text-heading font-semibold\" href=\"#\">\r\n                        {\r\n                          val.subject /*+\r\n                        \" gusgdsauchs uhhhhhhhhhhhhh hhhhhhhhhhhhhhhhh hhhhhhhhhhhh hhh hhhhhhhhhhhhh hhhhhhhhhhhh hhh hhhhhhhhh hhhhhhh hhhhhhhhhhhhh hhhhhhh hhhhhhhhhhhhhh hhhhhhhhhhhh hhhhhhhhhhhh hhhh  hhhhhh hhhh hhhhhhhhhhhh hhhhhhhhhhhhh hhhhhhhhhhhhh hhhhh\"*/\r\n                        }\r\n                      </a>\r\n                      <br />\r\n                      {val.image_content !== null ? (\r\n                        <div>\r\n                          <a\r\n                            className=\"text-heading font-semibold attachments\"\r\n                            href={val.image_content}\r\n                            target=\"_blank\"\r\n                          >\r\n                            Attachments\r\n                          </a>\r\n                        </div>\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                    </td>\r\n                    <td data-label=\"Email\" className=\"tableValue\">\r\n                      <span>{val.name}</span>\r\n                    </td>\r\n                    <td data-label=\"Email\" className=\"tableValue\">\r\n                      <span>{val.desig}</span>\r\n                    </td>\r\n                    <td data-label=\"Email\" className=\"tableValue\">\r\n                      <span>{val.department}</span>\r\n                    </td>\r\n                    <td data-label=\"Email\" className=\"tableValue\">\r\n                      <span>{val.date}</span>\r\n                    </td>\r\n                    <td className=\"tableValue\">\r\n                      <span>\r\n                        <Button\r\n                          className=\"status status-paid\"\r\n                          onClick={() =>\r\n                            this.setState({\r\n                              showpdfmodal: true,\r\n                              pdfLink: val.template_docx,\r\n                              noticeId: val.id,\r\n                            })\r\n                          }\r\n                          disabled={val.template_docx === null ? true : false}\r\n                        >\r\n                          View\r\n                        </Button>\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <Modal\r\n          show={this.state.showpdfmodal}\r\n          dialogClassName=\"modalcssnotice\"\r\n          onHide={() => this.setState({ showpdfmodal: false })}\r\n        >\r\n          <div className=\"commentsandpdfmodal\">\r\n            <div className=\"pdfviewmodal\">\r\n              <DocViewer uri={this.state.pdfLink} fileType={\"docx\"} />\r\n            </div>\r\n            <div className=\"commentsmodal\">\r\n              <NoticeComments noticeId={this.state.noticeId} />\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n        {this.props.isStaff ? (\r\n          <Modal\r\n            show={this.state.shownoticeformmodal}\r\n            onHide={() => this.setState({ shownoticeformmodal: false })}\r\n          >\r\n            <NoticeForm fetchNoticeData={this.fetchNoticeData} />\r\n          </Modal>\r\n        ) : (\r\n          <div />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.userReducer.profile,\r\n    isStaff: state.userReducer.isStaff,\r\n  };\r\n};\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     changeUserId: (payload) => {\r\n//       dispatch(changeUserId(payload));\r\n//     },\r\n//     changeUserProfile: (payload) => {\r\n//       dispatch(changeUserProfile(payload));\r\n//     },\r\n//     changeUserStaffStatus: (payload) => {\r\n//       dispatch(changeUserStaffStatus(payload));\r\n//     },\r\n//   };\r\n// };\r\n\r\nexport default connect(mapStateToProps, null)(notice);\r\n","import React, { Component } from \"react\";\r\nimport \"./assignmentForm.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { getToken } from \"../../../../config/localStorage\";\r\nimport urlList from \"../../../../config/urlList\";\r\nclass assignmentForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      subject: \"\",\r\n      title: \"\",\r\n      content: \"\",\r\n      selectAttachment:[],\r\n      selectDocument: [],\r\n    };\r\n  }\r\n  submitForm = () => {\r\n    let myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", \"Bearer \" + getToken());\r\n\r\n    let formdata = new FormData();\r\n    formdata.append(\"department\", \"CSE\");\r\n    formdata.append(\"desig\", this.props.profile.designation);\r\n    formdata.append(\"subject\", this.state.subject);\r\n    formdata.append(\"content\", this.state.content);\r\n    formdata.append(\"assigned_by\", this.props.userId);\r\n    formdata.append(\"title\", this.state.title);\r\n    formdata.append(\"image_content\", this.state.selectAttachment);\r\n    formdata.append(\"template_docx\", this.state.selectDocument);\r\n    formdata.append(\r\n      \"name\",\r\n      this.props.profile.name.first_name +\r\n        \" \" +\r\n        this.props.profile.name.last_name\r\n    );\r\n\r\n    let requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: formdata,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(urlList.postAssignement, requestOptions)\r\n      .then((response) => {\r\n        console.log(response.status);\r\n        if (!response.ok) {\r\n          throw new Error(\"HTTP status \" + response.status);\r\n        }\r\n        return response.text();\r\n      })\r\n      .then((result) => {\r\n        console.log(result);\r\n        this.props.fetchAssignmentList();\r\n      })\r\n      .catch((error) => console.log(\"error posting assignment\", error));\r\n  };\r\n  todaysDate = () => {\r\n    let curr = new Date();\r\n    curr.setDate(curr.getDate());\r\n    let date = curr.toISOString().substr(0, 10);\r\n    return date;\r\n  };\r\n  render() {\r\n    console.log(this.state);\r\n    return (\r\n      <div className=\"assignmentformcontainer\">\r\n        <form>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"subject\">Subject:</label>\r\n            <input\r\n              id=\"subject\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Subject\"\r\n              value={this.state.subject}\r\n              onChange={(event) =>\r\n                this.setState({ subject: event.target.value })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"title\">Topic:</label>\r\n            <input\r\n              id=\"title\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Assignment Title\"\r\n              value={this.state.title}\r\n              onChange={(event) => this.setState({ title: event.target.value })}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"content\">Content:</label>\r\n            <textarea\r\n              className=\"form-control\"\r\n              id=\"content\"\r\n              rows=\"3\"\r\n              value={this.state.content}\r\n              onChange={(event) =>\r\n                this.setState({ content: event.target.value })\r\n              }\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"attachment\">Select Image Attachment:</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"file\"\r\n              id=\"attachment\"\r\n              accept=\"image/*\"\r\n              onChange={(event) =>\r\n                this.setState({ selectAttachment: event.target.files[0] })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"attachment\">Select Assignment Attachment:</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"file\"\r\n              id=\"attachment\"\r\n              accept=\".docx\"\r\n              onChange={(event) =>\r\n                this.setState({ selectDocument: event.target.files[0] })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"issuedate\">Issue Date:</label>\r\n            <input\r\n              id=\"issuedate\"\r\n              className=\"form-control\"\r\n              type=\"date\"\r\n              name=\"pickup_time\"\r\n              required\r\n              disabled\r\n              defaultValue={this.todaysDate()}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"assignedby\">Assigned By:</label>\r\n            <input\r\n              id=\"assignedby\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              disabled\r\n              value={\r\n                this.props.profile.name.first_name +\r\n                \" \" +\r\n                this.props.profile.name.last_name\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"department\">Department By:</label>\r\n            <input\r\n              id=\"department\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Department\"\r\n              value={\"CSE\"}\r\n              disabled\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"designation\">Designation:</label>\r\n            <input\r\n              id=\"designation\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Designation\"\r\n              value={this.props.profile.designation}\r\n              disabled\r\n              required\r\n            />\r\n          </div>\r\n        </form>\r\n        <button\r\n          value=\"Submit\"\r\n          className=\"submit\"\r\n          onClick={() => this.submitForm()}\r\n        >\r\n          Submit\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.userReducer.profile,\r\n    isStaff: state.userReducer.isStaff,\r\n    userId: state.userReducer.userId,\r\n  };\r\n};\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     changeUserId: (payload) => {\r\n//       dispatch(changeUserId(payload));\r\n//     },\r\n//     changeUserProfile: (payload) => {\r\n//       dispatch(changeUserProfile(payload));\r\n//     },\r\n//     changeUserStaffStatus: (payload) => {\r\n//       dispatch(changeUserStaffStatus(payload));\r\n//     },\r\n//   };\r\n// };\r\n\r\nexport default connect(mapStateToProps, null)(assignmentForm);\r\n","import React, { Component } from \"react\";\r\nimport { CgDanger } from \"react-icons/cg\";\r\nimport { AiOutlineSafety } from \"react-icons/ai\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { getToken } from \"../../../config/localStorage\";\r\nimport urlList from \"../../../config/urlList\";\r\nimport DocViewer from \"../../docViewer/docViewer\";\r\nimport AssignmentForm from \"./assignmentForm/assignmentForm\";\r\nimport \"./teacherpage.css\";\r\nclass teacherpage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showPdfModal: false,\r\n      showAssignmentformmodal: false,\r\n      assignmentList: null,\r\n      pdfLink: null,\r\n    };\r\n  }\r\n  fetchAssignmentList = () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", \"Bearer \" + getToken());\r\n\r\n    var requestOptions = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(urlList.getAssignmentList, requestOptions)\r\n      .then((response) => {\r\n        console.log(response.status);\r\n        if (!response.ok) {\r\n          throw new Error(\"HTTP status \" + response.status);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((result) => {\r\n        console.log(\"assignment data\", result);\r\n        this.setState({ assignmentList: result });\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n  componentDidMount() {\r\n    this.fetchAssignmentList();\r\n  }\r\n  render() {\r\n    console.log(\"teacher page history\", this.props);\r\n    return (\r\n      <div className=\"teacherpage\">\r\n        <div className=\"sortcontainer\">\r\n          <Button\r\n            className=\"btn-sm\"\r\n            onClick={() => this.setState({ showAssignmentformmodal: true })}\r\n          >\r\n            Create Assignment\r\n          </Button>\r\n          <div className=\"sortcontainerchild\">\r\n            <div className=\"form-group\">\r\n              <select\r\n                className=\"form-control\"\r\n                id=\"exampleFormControlSelect1\"\r\n                defaultValue=\"Subject\"\r\n              >\r\n                <option disabled value=\"Subject\">\r\n                  Subject\r\n                </option>\r\n                <option>1</option>\r\n                <option>2</option>\r\n                <option>3</option>\r\n                <option>4</option>\r\n                <option>5</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <select\r\n                className=\"form-control\"\r\n                id=\"exampleFormControlSelect1\"\r\n                defaultValue=\"Assignment Topic\"\r\n              >\r\n                <option disabled value=\"Assignment Topic\">\r\n                  Assignment Topic\r\n                </option>\r\n                <option>1</option>\r\n                <option>2</option>\r\n                <option>3</option>\r\n                <option>4</option>\r\n                <option>5</option>\r\n              </select>\r\n            </div>\r\n            <Button className=\"btn-sm\">SORT</Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"teachertableparent\">\r\n          <table className=\"table table-hover table-nowrap\">\r\n            <thead className=\"thead-light\">\r\n              <tr>\r\n                <th scope=\"col\" className=\"topic\">\r\n                  Topic\r\n                </th>\r\n                <th scope=\"col\">Subject Name</th>\r\n                <th scope=\"col\">Submitted By</th>\r\n                <th scope=\"col\">Issue Date</th>\r\n                <th scope=\"col\">Plagiarised check</th>\r\n                <th scope=\"col\">View Submissions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.assignmentList !== null ? (\r\n                this.state.assignmentList.map((val, ind) => (\r\n                  <tr key={ind}>\r\n                    <td className=\"topic\">\r\n                      <a\r\n                        href=\"#\"\r\n                        className=\"font-semibold\"\r\n                        onClick={() =>\r\n                          this.setState({\r\n                            showPdfModal:\r\n                              val.template_docx !== null ? true : false,\r\n                            pdfLink: val.template_docx,\r\n                          })\r\n                        }\r\n                      >\r\n                        {val.title}\r\n                      </a>\r\n\r\n                      <br />\r\n                      {val.image_content !== null ? (\r\n                        <div>\r\n                          <a\r\n                            className=\"text-heading font-semibold attachments\"\r\n                            href={val.image_content}\r\n                            target=\"_blank\"\r\n                          >\r\n                            Attachments\r\n                          </a>\r\n                        </div>\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      <span>{val.subject[0]}</span>\r\n                    </td>\r\n                    <td>\r\n                      <span>Student</span>\r\n                    </td>\r\n                    <td>\r\n                      <span>{val.date}</span>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"plagiarismicon\">\r\n                        {Math.floor(Math.random() * 10) % 2 === 1 ? (\r\n                          <CgDanger color=\"red\" size=\"25px\" />\r\n                        ) : (\r\n                          <AiOutlineSafety color=\"green\" size=\"25px\" />\r\n                        )}\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <Button\r\n                        className=\"status status-paid\"\r\n                        onClick={() =>\r\n                          this.props.history.push(\"/home/assignment/\" + val.id)\r\n                        }\r\n                      >\r\n                        View\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <Modal\r\n          show={this.state.showPdfModal}\r\n          onHide={() => this.setState({ showPdfModal: false })}\r\n        >\r\n          <DocViewer uri={this.state.pdfLink} fileType={\"docx\"}/>\r\n        </Modal>\r\n        <Modal\r\n          show={this.state.showAssignmentformmodal}\r\n          onHide={() => this.setState({ showAssignmentformmodal: false })}\r\n        >\r\n          <AssignmentForm fetchAssignmentList={this.fetchAssignmentList} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default teacherpage;\r\n","import React, { Component } from \"react\";\r\nimport { CgDanger } from \"react-icons/cg\";\r\nimport { AiOutlineSafety } from \"react-icons/ai\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { connect } from \"react-redux\";\r\nimport { getToken } from \"../../../config/localStorage\";\r\nimport urlList from \"../../../config/urlList\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport DocViewer from \"../../docViewer/docViewer\";\r\nimport \"./studentpage.css\";\r\nclass studentpage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showSubmitModal: false,\r\n      showPdfModal: false,\r\n      assignmentList: null,\r\n      pdfLink: null,\r\n      assignmentFileToUpload: [],\r\n      assignmentID: null,\r\n    };\r\n  }\r\n  fetchAssignmentList = () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", \"Bearer \" + getToken());\r\n\r\n    var requestOptions = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(urlList.getAssignmentList, requestOptions)\r\n      .then((response) => {\r\n        console.log(response.status);\r\n        if (!response.ok) {\r\n          throw new Error(\"HTTP status \" + response.status);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((result) => {\r\n        console.log(\"assignment data\", result);\r\n        this.setState({ assignmentList: result });\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n  submitAssignment = () => {\r\n    if (\r\n      this.state.assignmentFileToUpload.length !== 0 &&\r\n      this.state.assignmentID !== null\r\n    ) {\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Authorization\", \"Bearer \" + getToken());\r\n\r\n      var formdata = new FormData();\r\n      formdata.append(\"assigned_by\", this.state.assignmentID);\r\n      formdata.append(\"submitted_by\", this.props.profile.id);\r\n      formdata.append(\"upload_file\", this.state.assignmentFileToUpload);\r\n      formdata.append(\r\n        \"name\",\r\n        this.props.profile.name.first_name +\r\n          \" \" +\r\n          this.props.profile.name.last_name\r\n      );\r\n\r\n      var requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: formdata,\r\n        redirect: \"follow\",\r\n      };\r\n\r\n      fetch(urlList.submitAssignement, requestOptions)\r\n        .then((response) => {\r\n          console.log(response.status);\r\n          if (!response.ok) {\r\n            throw new Error(\"HTTP status \" + response.status);\r\n          }\r\n          return response.json();\r\n        })\r\n        .then((result) => console.log(result))\r\n        .catch((error) => console.log(\"error\", error));\r\n    } else {\r\n      console.log(\"please Select A file...\");\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.fetchAssignmentList();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"tableparent\">\r\n        <table className=\"table table-hover table-nowrap\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th scope=\"col\" className=\"topic\">\r\n                Topic\r\n              </th>\r\n              <th scope=\"col\">Subject Name</th>\r\n              <th scope=\"col\">Assigned By</th>\r\n              <th scope=\"col\">Issue Date</th>\r\n              <th scope=\"col\">Plagiarised check</th>\r\n              <th scope=\"col\">Submit</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.assignmentList !== null ? (\r\n              this.state.assignmentList.map((val, ind) => (\r\n                <tr key={ind}>\r\n                  <td className=\"topic\">\r\n                    <a\r\n                      href=\"#\"\r\n                      className=\"font-semibold\"\r\n                      onClick={() =>\r\n                        this.setState({\r\n                          showPdfModal:\r\n                            val.template_docx !== null ? true : false,\r\n                          pdfLink: val.template_docx,\r\n                        })\r\n                      }\r\n                    >\r\n                      {val.title}\r\n                    </a>\r\n                    <br />\r\n                    {val.image_content !== null ? (\r\n                      <div>\r\n                        <a\r\n                          className=\"text-heading font-semibold attachments\"\r\n                          href={val.image_content}\r\n                          target=\"_blank\"\r\n                        >\r\n                          Attachments\r\n                        </a>\r\n                      </div>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <span>{val.subject[0]}</span>\r\n                  </td>\r\n                  <td>\r\n                    <span>{val.name}</span>\r\n                  </td>\r\n                  <td>\r\n                    <span>{val.date}</span>\r\n                  </td>\r\n                  <td>\r\n                    <div className=\"plagiarismicon\">\r\n                      {Math.floor(Math.random() * 10) % 2 === 1 ? (\r\n                        <CgDanger color=\"red\" size=\"25px\" />\r\n                      ) : (\r\n                        <AiOutlineSafety color=\"green\" size=\"25px\" />\r\n                      )}\r\n                    </div>\r\n                  </td>\r\n                  <td>\r\n                    <Button\r\n                      className=\"status status-paid\"\r\n                      onClick={() =>\r\n                        this.setState({\r\n                          showSubmitModal: true,\r\n                          assignmentID: val.id,\r\n                        })\r\n                      }\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n        <Modal\r\n          show={this.state.showSubmitModal}\r\n          onHide={() => this.setState({ showSubmitModal: false })}\r\n        >\r\n          <Modal.Body>\r\n            <div className=\"mb-3\">\r\n              <label for=\"formFile\" className=\"form-label\">\r\n                Select Assignment\r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"file\"\r\n                id=\"formFile\"\r\n                accept=\".pdf\"\r\n                onChange={(event) =>\r\n                  this.setState({\r\n                    assignmentFileToUpload: event.target.files[0],\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <Button\r\n              className=\"btn-primary btn-sm\"\r\n              disabled={\r\n                this.state.assignmentFileToUpload.length === 0 ? true : false\r\n              }\r\n              onClick={() => this.submitAssignment()}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Modal.Body>\r\n        </Modal>\r\n        <Modal\r\n          show={this.state.showPdfModal}\r\n          onHide={() => this.setState({ showPdfModal: false })}\r\n        >\r\n          <DocViewer uri={this.state.pdfLink} fileType={\"docx\"} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.userReducer.profile,\r\n    isStaff: state.userReducer.isStaff,\r\n    userId: state.userReducer.userId,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(studentpage);\r\n","import React, { Component } from \"react\";\r\nimport \"./assignment.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport TeacherPage from \"./teacherpage/teacherpage\";\r\nimport StudentPage from \"./studentpage/studentpage\";\r\nfunction Assignmnet(props) {\r\n  let history = useHistory();\r\n  return (\r\n    <div className=\"assignmentcontainer\">\r\n      {props.isStaff ? <TeacherPage history={history} /> : <StudentPage />}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.userReducer.profile,\r\n    isStaff: state.userReducer.isStaff,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Assignmnet);\r\n","import React, { Component } from \"react\";\r\nimport { CgDanger } from \"react-icons/cg\";\r\nimport { AiOutlineSafety } from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getToken } from \"../../../../config/localStorage\";\r\nimport urlList from \"../../../../config/urlList\";\r\nimport { useParams } from \"react-router\";\r\nimport { BsArrowLeftCircle } from \"react-icons/bs\";\r\nimport DocViewer from \"../../../docViewer/docViewer\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./studentsAssignmentPage.css\";\r\nexport class StudentsAssignmentclass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      assignmentList: null,\r\n      showPdfModal: false,\r\n      pdfLink: null,\r\n    };\r\n  }\r\n  fetchAndUpdateData = () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", \"Bearer \" + getToken());\r\n\r\n    var requestOptions = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(urlList.getAssignmentSubmissions + this.props.id, requestOptions)\r\n      .then((response) => {\r\n        console.log(response.status);\r\n        if (!response.ok) {\r\n          throw new Error(\"HTTP status \" + response.status);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((result) => {\r\n        console.log(result);\r\n        this.setState({ assignmentList: result });\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n  componentDidMount() {\r\n    this.fetchAndUpdateData();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"studentAssignmentPageContainer\">\r\n        <div className=\"teacherpage\">\r\n          <div className=\"sortcontainer\">\r\n            <Link to=\"/home/assignment\">\r\n              <BsArrowLeftCircle size=\"35px\" />\r\n            </Link>\r\n          </div>\r\n          <div className=\"teachertableparent\">\r\n            <table className=\"table table-hover table-nowrap\">\r\n              <thead className=\"thead-light\">\r\n                <tr>\r\n                  <th scope=\"col\">Submitted By</th>\r\n                  <th scope=\"col\">Submission Date</th>\r\n                  <th scope=\"col\">Plagiarised check</th>\r\n                  <th scope=\"col\">Marks</th>\r\n                  <th scope=\"col\">View Assignment</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.assignmentList !== null ? (\r\n                  this.state.assignmentList.map((val, ind) => (\r\n                    <tr key={ind}>\r\n                      <td>{val.name}</td>\r\n                      <td>\r\n                        <span>{val.submission_date}</span>\r\n                      </td>\r\n                      <td>\r\n                        <div className=\"plagiarismicon\">\r\n                          {Math.floor(Math.random() * 10) % 2 === 1 ? (\r\n                            <CgDanger color=\"red\" size=\"25px\" />\r\n                          ) : (\r\n                            <AiOutlineSafety color=\"green\" size=\"25px\" />\r\n                          )}\r\n                        </div>\r\n                      </td>\r\n                      <td>{val.marks}</td>\r\n                      <td>\r\n                        <Button\r\n                          className=\"status status-paid\"\r\n                          onClick={() =>\r\n                            this.setState({\r\n                              showPdfModal: true,\r\n                              pdfLink: val.upload_file,\r\n                            })\r\n                          }\r\n                        >\r\n                          View\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <Modal\r\n            show={this.state.showPdfModal}\r\n            onHide={() => this.setState({ showPdfModal: false })}\r\n          >\r\n            <DocViewer uri={this.state.pdfLink} fileType={\"pdf\"} />\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction StudentAssignmentPage() {\r\n  let { id } = useParams();\r\n  return <StudentsAssignmentclass id={id} />;\r\n}\r\nexport default StudentAssignmentPage;\r\n","import React, { Component } from \"react\";\r\nimport { BsPlusSquare } from \"react-icons/bs\";\r\nimport { OverlayTrigger, Tooltip, Button } from \"react-bootstrap\";\r\nimport { getToken } from \"../../../config/localStorage\";\r\nimport urlList from \"../../../config/urlList\";\r\nimport \"./timeTableForm.css\";\r\nclass timeTableForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      monday: [],\r\n      tuesday: [],\r\n      wednesday: [],\r\n      thursday: [],\r\n      friday: [],\r\n      saturday: [],\r\n      timings: [],\r\n    };\r\n  }\r\n\r\n  addColumn = () => {\r\n    if (this.state.timings.length < 6) {\r\n      let temptiming = this.state.timings;\r\n      temptiming.push({ from: \"09:00\", to: \"09:00\" });\r\n      let tempmonday = this.state.monday;\r\n      tempmonday.push(\"\");\r\n      let tempTuesday = this.state.tuesday;\r\n      tempTuesday.push(\"\");\r\n      let tempWednesday = this.state.wednesday;\r\n      tempWednesday.push(\"\");\r\n      let tempThursday = this.state.thursday;\r\n      tempThursday.push(\"\");\r\n      let tempFriday = this.state.friday;\r\n      tempFriday.push(\"\");\r\n      let tempSaturday = this.state.saturday;\r\n      tempSaturday.push(\"\");\r\n\r\n      this.setState({\r\n        timings: temptiming,\r\n        monday: tempmonday,\r\n        tuesday: tempTuesday,\r\n        wednesday: tempWednesday,\r\n        thursday: tempThursday,\r\n        friday: tempFriday,\r\n        saturday: tempSaturday,\r\n      });\r\n    }\r\n  };\r\n  changeSubjectValue = (ind, val, day) => {\r\n    console.log(ind, val, day);\r\n    switch (day) {\r\n      case 1: {\r\n        let temp = this.state.monday;\r\n        temp[ind] = val;\r\n        this.setState({ monday: temp });\r\n        break;\r\n      }\r\n      case 2: {\r\n        let temp = this.state.tuesday;\r\n        temp[ind] = val;\r\n        this.setState({ tuesday: temp });\r\n        break;\r\n      }\r\n      case 3: {\r\n        let temp = this.state.wednesday;\r\n        temp[ind] = val;\r\n        this.setState({ wednesday: temp });\r\n        break;\r\n      }\r\n      case 4: {\r\n        let temp = this.state.thursday;\r\n        temp[ind] = val;\r\n        this.setState({ thursday: temp });\r\n        break;\r\n      }\r\n      case 5: {\r\n        let temp = this.state.friday;\r\n        temp[ind] = val;\r\n        this.setState({ friday: temp });\r\n        break;\r\n      }\r\n      case 6: {\r\n        let temp = this.state.saturday;\r\n        temp[ind] = val;\r\n        this.setState({ saturday: temp });\r\n        break;\r\n      }\r\n    }\r\n  };\r\n  changeFromTiming = (ind, time) => {\r\n    let temp = this.state.timings;\r\n    temp[ind].from = time;\r\n    this.setState({ timings: temp });\r\n  };\r\n  changeToTiming = (ind, time) => {\r\n    let temp = this.state.timings;\r\n    temp[ind].to = time;\r\n    this.setState({ timings: temp });\r\n  };\r\n\r\n  uploadDaywiselecture = (day) => {\r\n    let selectedday = [];\r\n    switch (day) {\r\n      case 1: {\r\n        selectedday = this.state.monday;\r\n        break;\r\n      }\r\n      case 2: {\r\n        selectedday = this.state.tuesday;\r\n        break;\r\n      }\r\n      case 3: {\r\n        selectedday = this.state.wednesday;\r\n        break;\r\n      }\r\n      case 4: {\r\n        selectedday = this.state.thursday;\r\n        break;\r\n      }\r\n      case 5: {\r\n        selectedday = this.state.friday;\r\n        break;\r\n      }\r\n      case 6: {\r\n        selectedday = this.state.saturday;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (selectedday.length === 0) {\r\n      console.log(\"selected day is empty\");\r\n    } else {\r\n      let lectures = [];\r\n\r\n      for (let i = 0; i < 6; i++) {\r\n        let temp = [];\r\n        if (i < selectedday.length) {\r\n          temp.push(this.state.timings[i].from);\r\n          temp.push(this.state.timings[i].to);\r\n          temp.push(selectedday[i]);\r\n        }\r\n        lectures.push(temp);\r\n      }\r\n\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Authorization\", \"Bearer \" + getToken());\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n      var raw = JSON.stringify({\r\n        semester: this.props.semester,\r\n        day: day,\r\n        lecture_one: lectures[0],\r\n        lecture_two: lectures[1],\r\n        lecture_three: lectures[2],\r\n        lecture_four: lectures[3],\r\n        lecture_five: lectures[4],\r\n        lecture_six: lectures[5],\r\n      });\r\n\r\n      var requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n      //console.log(this.props.semester, day, lectures);\r\n\r\n      fetch(urlList.postSchedule, requestOptions)\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            return response.json();\r\n          } else {\r\n            throw new Error(\"Something went wrong\");\r\n          }\r\n        })\r\n        .then((result) => console.log(result, \"success for day = \", day))\r\n        .catch((error) => console.log(\"error in day= \", day, error));\r\n    }\r\n  };\r\n  scheduleformSubmit = () => {\r\n    this.uploadDaywiselecture(1);\r\n    this.uploadDaywiselecture(2);\r\n    this.uploadDaywiselecture(3);\r\n    this.uploadDaywiselecture(4);\r\n    this.uploadDaywiselecture(5);\r\n    this.uploadDaywiselecture(6);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"timeTableFormContainer\">\r\n        <div className=\"timeformtable\">\r\n          <div className=\"timeformtableparent\">\r\n            <table className=\"table table-hover table-nowrap\">\r\n              <thead className=\"thead-light\">\r\n                <tr>\r\n                  <th scope=\"col\" className=\"timeformtd\">\r\n                    Day\r\n                  </th>\r\n                  {this.state.timings.map((val, ind) => (\r\n                    <th scope=\"col\" className=\"timeformtd\" key={ind}>\r\n                      <input\r\n                        type=\"time\"\r\n                        required\r\n                        value={val.from}\r\n                        onChange={(event) => {\r\n                          console.log(event.target.value);\r\n                          this.changeFromTiming(ind, event.target.value);\r\n                        }}\r\n                      />\r\n                      <br /> to\r\n                      <br />\r\n                      <input\r\n                        type=\"time\"\r\n                        required\r\n                        value={val.to}\r\n                        onChange={(event) => {\r\n                          console.log(event.target.value);\r\n                          this.changeToTiming(ind, event.target.value);\r\n                        }}\r\n                      />\r\n                    </th>\r\n                  ))}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td className=\"timeformtd\">\r\n                    <span className=\"font-semibold\">Monday</span>\r\n                  </td>\r\n                  {this.state.monday.map((val, ind) => (\r\n                    <td className=\"InputParentSubject\" key={ind}>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={val}\r\n                        onChange={(event) =>\r\n                          this.changeSubjectValue(ind, event.target.value, 1)\r\n                        }\r\n                        className=\"form-control subjectInput\"\r\n                        placeholder=\"Enter Subject\"\r\n                      />\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"timeformtd\">\r\n                    <span className=\"font-semibold\">Tuesday</span>\r\n                  </td>\r\n                  {this.state.tuesday.map((val, ind) => (\r\n                    <td className=\"InputParentSubject\" key={ind}>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={val}\r\n                        onChange={(event) =>\r\n                          this.changeSubjectValue(ind, event.target.value, 2)\r\n                        }\r\n                        className=\"form-control subjectInput\"\r\n                        placeholder=\"Enter Subject\"\r\n                      />\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"timeformtd\">\r\n                    <span className=\"font-semibold\">Wednesday</span>\r\n                  </td>\r\n                  {this.state.wednesday.map((val, ind) => (\r\n                    <td className=\"InputParentSubject\" key={ind}>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={val}\r\n                        onChange={(event) =>\r\n                          this.changeSubjectValue(ind, event.target.value, 3)\r\n                        }\r\n                        className=\"form-control subjectInput\"\r\n                        placeholder=\"Enter Subject\"\r\n                      />\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"timeformtd\">\r\n                    <span className=\"font-semibold\">Thursday</span>\r\n                  </td>\r\n                  {this.state.thursday.map((val, ind) => (\r\n                    <td className=\"InputParentSubject\" key={ind}>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={val}\r\n                        onChange={(event) =>\r\n                          this.changeSubjectValue(ind, event.target.value, 4)\r\n                        }\r\n                        className=\"form-control subjectInput\"\r\n                        placeholder=\"Enter Subject\"\r\n                      />\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"timeformtd\">\r\n                    <span className=\"font-semibold\">Friday</span>\r\n                  </td>\r\n                  {this.state.friday.map((val, ind) => (\r\n                    <td className=\"InputParentSubject\" key={ind}>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={val}\r\n                        onChange={(event) =>\r\n                          this.changeSubjectValue(ind, event.target.value, 5)\r\n                        }\r\n                        className=\"form-control subjectInput\"\r\n                        placeholder=\"Enter Subject\"\r\n                      />\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"timeformtd\">\r\n                    <span className=\"font-semibold\">Saturday</span>\r\n                  </td>\r\n                  {this.state.saturday.map((val, ind) => (\r\n                    <td className=\"InputParentSubject\" key={ind}>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={val}\r\n                        onChange={(event) =>\r\n                          this.changeSubjectValue(ind, event.target.value, 6)\r\n                        }\r\n                        className=\"form-control subjectInput\"\r\n                        placeholder=\"Enter Subject\"\r\n                      />\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <div className=\"tablesubmitbutton\">\r\n              <button\r\n                value=\"Submit\"\r\n                className=\"submit\"\r\n                onClick={() => this.scheduleformSubmit()}\r\n              >\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <OverlayTrigger\r\n          placement=\"left\"\r\n          delay={{ show: 250, hide: 400 }}\r\n          overlay={(e) => (\r\n            <Tooltip id=\"button-tooltip\" {...e}>\r\n              Add Column\r\n            </Tooltip>\r\n          )}\r\n        >\r\n          <a href=\"#\" className=\"columnplus\" onClick={() => this.addColumn()}>\r\n            <BsPlusSquare size=\"40px\" />\r\n          </a>\r\n        </OverlayTrigger>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default timeTableForm;\r\n","import React, { Component } from \"react\";\r\nimport { getToken } from \"../../config/localStorage\";\r\nimport urlList from \"../../config/urlList\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport TimeTableForm from \"./timeTableForm/timeTableForm\";\r\nimport \"./timeTable.css\";\r\n\r\nclass timeTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      monday: [],\r\n      tuesday: [],\r\n      wednesday: [],\r\n      thursday: [],\r\n      friday: [],\r\n      saturday: [],\r\n      showModal: false,\r\n      semester: 1,\r\n      timings: [],\r\n    };\r\n  }\r\n\r\n  fetchSchedule = (sem) => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", \"Bearer \" + getToken());\r\n\r\n    var requestOptions = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(urlList.getSchedule + sem, requestOptions)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error(\"Something went wrong\");\r\n        }\r\n      })\r\n      .then((result) => {\r\n        console.log(result, \" schedule fetch success\");\r\n        let tempTiming = [];\r\n        let tempMonday = [],\r\n          tempTuesday = [],\r\n          tempWednesday = [],\r\n          tempThursday = [],\r\n          tempFriday = [],\r\n          tempSaturday = [];\r\n        if (result.length > 0) {\r\n          if (result[0].lecture_one.length > 0) {\r\n            tempTiming.push({\r\n              to: result[0].lecture_one[1],\r\n              from: result[0].lecture_one[0],\r\n            });\r\n          }\r\n          if (result[0].lecture_two.length > 0) {\r\n            tempTiming.push({\r\n              to: result[0].lecture_two[1],\r\n              from: result[0].lecture_two[0],\r\n            });\r\n          }\r\n          if (result[0].lecture_three.length > 0) {\r\n            tempTiming.push({\r\n              to: result[0].lecture_three[1],\r\n              from: result[0].lecture_three[0],\r\n            });\r\n          }\r\n          if (result[0].lecture_four.length > 0) {\r\n            tempTiming.push({\r\n              to: result[0].lecture_four[1],\r\n              from: result[0].lecture_four[0],\r\n            });\r\n          }\r\n          if (result[0].lecture_five.length > 0) {\r\n            tempTiming.push({\r\n              to: result[0].lecture_five[1],\r\n              from: result[0].lecture_five[0],\r\n            });\r\n          }\r\n          if (result[0].lecture_six.length > 0) {\r\n            tempTiming.push({\r\n              to: result[0].lecture_six[1],\r\n              from: result[0].lecture_six[0],\r\n            });\r\n          }\r\n          ///switch case for assigning daywise subject\r\n\r\n          for (let i = 0; i < result.length; i++) {\r\n            let tempDay = [];\r\n            if (result[i].lecture_one.length > 0) {\r\n              tempDay.push(result[i].lecture_one[2]);\r\n            }\r\n            if (result[i].lecture_two.length > 0) {\r\n              tempDay.push(result[i].lecture_two[2]);\r\n            }\r\n            if (result[i].lecture_three.length > 0) {\r\n              tempDay.push(result[i].lecture_three[2]);\r\n            }\r\n            if (result[i].lecture_four.length > 0) {\r\n              tempDay.push(result[i].lecture_four[2]);\r\n            }\r\n            if (result[i].lecture_five.length > 0) {\r\n              tempDay.push(result[i].lecture_five[2]);\r\n            }\r\n            if (result[i].lecture_six.length > 0) {\r\n              tempDay.push(result[i].lecture_six[2]);\r\n            }\r\n            switch (result[i].day) {\r\n              case 1: {\r\n                tempMonday = tempDay;\r\n                break;\r\n              }\r\n              case 2: {\r\n                tempTuesday = tempDay;\r\n                break;\r\n              }\r\n              case 3: {\r\n                tempWednesday = tempDay;\r\n                break;\r\n              }\r\n              case 4: {\r\n                tempThursday = tempDay;\r\n                break;\r\n              }\r\n              case 5: {\r\n                tempFriday = tempDay;\r\n                break;\r\n              }\r\n              case 6: {\r\n                tempSaturday = tempDay;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        //updating state\r\n        this.setState({\r\n          timings: tempTiming,\r\n          monday: tempMonday,\r\n          tuesday: tempTuesday,\r\n          wednesday: tempWednesday,\r\n          thursday: tempThursday,\r\n          friday: tempFriday,\r\n          saturday: tempSaturday,\r\n          semester: sem,\r\n        });\r\n      })\r\n      .catch((error) => console.log(\"error in fetching schedule\", error));\r\n  };\r\n  componentDidMount() {\r\n    this.fetchSchedule(1);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"timetablecontainer\">\r\n        <div className=\"selectsemester\">\r\n          {this.props.isStaff ? (\r\n            <Button\r\n              className=\"btn-sm\"\r\n              onClick={() => this.setState({ showModal: true })}\r\n            >\r\n              Create Time Table\r\n            </Button>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <div className=\"form-group\">\r\n            <select\r\n              className=\"form-control\"\r\n              id=\"exampleFormControlSelect1\"\r\n              defaultValue=\"Assignment Topic\"\r\n              onChange={(e) => this.fetchSchedule(e.target.value)}\r\n            >\r\n              <option disabled value=\"Assignment Topic\">\r\n                Select Semester\r\n              </option>\r\n              <option value={1}>1</option>\r\n              <option value={2}>2</option>\r\n              <option value={3}>3</option>\r\n              <option value={4}>4</option>\r\n              <option value={5}>5</option>\r\n              <option value={6}>6</option>\r\n              <option value={7}>7</option>\r\n              <option value={8}>8</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"teachertableparent \">\r\n          <table className=\"table table-hover table-nowrap\">\r\n            <thead className=\"thead-light\">\r\n              <tr>\r\n                <th scope=\"col\" className=\"time\">\r\n                  Day\r\n                </th>\r\n                {this.state.timings.map((val, ind) => (\r\n                  <th scope=\"col\" className=\"time\" key={ind}>\r\n                    {val.from}\r\n                    <br /> to\r\n                    <br />\r\n                    {val.to}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td className=\"time\">\r\n                  <span className=\"font-semibold\">Monday</span>\r\n                </td>\r\n                {this.state.monday.map((val, ind) => (\r\n                  <td className=\"time\" key={ind}>\r\n                    <span className=\"tableSubject\">{val}</span>\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n              <tr>\r\n                <td className=\"time\">\r\n                  <span className=\"font-semibold\">Tuesday</span>\r\n                </td>\r\n                {this.state.tuesday.map((val, ind) => (\r\n                  <td className=\"time\" key={ind}>\r\n                    <span className=\"tableSubject\">{val}</span>\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n              <tr>\r\n                <td className=\"time\">\r\n                  <span className=\"font-semibold\">Wednesday</span>\r\n                </td>\r\n                {this.state.wednesday.map((val, ind) => (\r\n                  <td className=\"time\" key={ind}>\r\n                    <span className=\"tableSubject\">{val}</span>\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n              <tr>\r\n                <td className=\"time\">\r\n                  <span className=\"font-semibold\">Thursday</span>\r\n                </td>\r\n                {this.state.thursday.map((val, ind) => (\r\n                  <td className=\"time\" key={ind}>\r\n                    <span className=\"tableSubject\">{val}</span>\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n              <tr>\r\n                <td className=\"time\">\r\n                  <span className=\"font-semibold\">Friday</span>\r\n                </td>\r\n                {this.state.friday.map((val, ind) => (\r\n                  <td className=\"time\" key={ind}>\r\n                    <span className=\"tableSubject\">{val}</span>\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n              <tr>\r\n                <td className=\"time\">\r\n                  <span className=\"font-semibold\">Saturday</span>\r\n                </td>\r\n                {this.state.saturday.map((val, ind) => (\r\n                  <td className=\"time\" key={ind}>\r\n                    <span className=\"tableSubject\">{val}</span>\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        {this.props.isStaff ? (\r\n          <Modal\r\n            dialogClassName=\"modalcss\"\r\n            show={this.state.showModal}\r\n            onHide={() => this.setState({ showModal: false })}\r\n          >\r\n            <TimeTableForm semester={this.state.semester} />\r\n          </Modal>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.userReducer.profile,\r\n    isStaff: state.userReducer.isStaff,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(timeTable);\r\n","import \"./App.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  useRouteMatch,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport Store from \"./assets/redux/store\";\r\nimport Login from \"./assets/pages/login/login\";\r\nimport Error from \"./assets/pages/notfoundpage/notfoundpage\";\r\nimport SideBar from \"./assets/pages/sidebar/sidebar\";\r\nimport DashBoard from \"./assets/pages/dashboard/dashboard\";\r\nimport Notice from \"./assets/pages/notice/notice\";\r\nimport Assignmnet from \"./assets/pages/assignment/assignmnet\";\r\nimport StudentsAssignmentPage from \"./assets/pages/assignment/teacherpage/studentsAssignmentPage/studentsAssignmentPage\";\r\nimport TimeTable from \"./assets/pages/timeTable/timeTable\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={Store}>\r\n        <Router>\r\n          <AllRoutes />\r\n        </Router>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\nfunction AllRoutes() {\r\n  let history = useHistory();\r\n  return (\r\n    <Switch>\r\n      <Route exact path={[\"/\", \"/login\"]}>\r\n        <Login history={history} />\r\n      </Route>\r\n      <Route path=\"/home\">\r\n        <NavBar history={history} />\r\n      </Route>\r\n      <Route path=\"*\">\r\n        <Error />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nfunction NavBar({ history }) {\r\n  var match = useRouteMatch();\r\n  return (\r\n    <>\r\n      <SideBar history={history} />\r\n      <Switch>\r\n        <Route exact path={[match.path + \"/\", match.path + \"/dashboard\"]}>\r\n          <DashBoard history={history} />\r\n        </Route>\r\n        <Route path={match.path + \"/notice\"}>\r\n          <Notice />\r\n        </Route>\r\n        <Route exact path={match.path + \"/assignment\"}>\r\n          <Assignmnet />\r\n        </Route>\r\n        <Route path={match.path + \"/assignment/:id\"}>\r\n          <StudentsAssignmentPage />\r\n        </Route>\r\n        <Route path={match.path + \"/timetable\"}>\r\n          <TimeTable />\r\n        </Route>\r\n        <Route path=\"*\">\r\n          <Error />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}